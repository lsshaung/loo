// Synopsys, Inc.
// User: ICer
// Date: Thu May 12 01:39:54 2022

// ==================================================================================================
// This config file prototype is produced from the last run using the complete list of extracted fsms.
// Please note that by providing your own description of the module you are enforcing what will be
// extracted for that module.
// Copy this file to your source directory and edit it as described below,
// then pass the file to VCS using the -cm_fsmcfg command line option.
// FSMs will be extracted normally for any module not mentioned in this file
// ==================================================================================================
// 1. For every module that you want to specify yourself, use:
//      MODULE==name
//    -----------------------------------------------------
//    The following options are defining the behavior on the module level.
//    -----------------------------------------------------
//    1.1  You can control what fsms should be used within this module:
//            FSMS=AUTO
//            this means that you want VCS to automatically extract all
//            detectable FSMs from this module.
//            -----------------------------------------------------
//            FSMS=EXCLUDE
//            this means that you want all fsms except the ones from the list that follows
//            if the list is empty, all fsms will be extracted for this module
//            -----------------------------------------------------
//            FSMS=RESTRICT
//            this means that you want only the fsms from the list that follows
//            if the list is empty, no fsms will be extracted for this module
//            -----------------------------------------------------
//         If none of these options are specified, the program will assume FSMS=RESTRICT
//         -----------------------------------------------------
//     1.2 You can specify that the state with the minimal value should be used as a
//         start state for all sequences in every fsm in the module.
//            FSMS=START_STATE_DFLT
//         For any particular fsm you can overwrite this behavior inside its description.
//    -----------------------------------------------------
// 2. Each fsm description in the list of fsms should be specified as follows:
//      2.1 provide the current state variable declaration:
//          CURRENT= name of the current state variable
//      -----------------------------------------------------
//      2.2 if next state variable is different from the current state provide:
//          NEXT= next state variable
//          if you don't use NEXT=, the program will assume that CURRENT and NEXT are the same
//      -----------------------------------------------------
//      2.3 if you want to provide the restrictive the list of states, provide:
//          STATES= s0,s1 etc. where s0 is either a name or a value of the state
//          if you don't use STATES=, the program will assume that you want to use all states
//      -----------------------------------------------------
//      2.4 if you want to ignore some states, specify them in the following list:
//          STATES_X= s0,s1, etc.
//      -----------------------------------------------------
//      2.5 if you want to mark, that some states should never be reached, specify them as a list:
//          STATES_NEVER= s0,s1, etc.
//      -----------------------------------------------------
//      2.6 similar to the STATES, if you want to provide the restrictive the list of transitions, specify:
//          TRANSITIONS= s0->s1,s1->s2, etc.
//      -----------------------------------------------------
//      2.7 similar to the STATES_X, if you want to ignore some transitions, specify them in the following list:
//          TRANSITIONS_X= s0->s1,s1->s2, etc.
//      -----------------------------------------------------
//      2.8 similar to the STATES_NEVER,if you want to mark, that some transitions should never occur,
//          specify them as a list:
//          TRANSITIONS_NEVER= s0->s1,s1->s2,     etc.
//      -----------------------------------------------------
//      2.9 if you want to specify the start state use:
//          START_STATE= s0
//      -----------------------------------------------------
//      Please note:
//          - that a state in every list can be specified either by name or by value.
//          - in specifying the transitions you can use * in order to refer to 'any' state.
// ==================================================================================================
// Uncomment and modify the following 2 line to override default FSM sequence limits for all FSMs in the design.
//SEQ_NUMBER_MAX=10000
//SEQ_LENGTH_MAX=32

MODULE=DW_axi_x2p_arb
CURRENT=arb_state
NEXT=arb_next_state
STATES=IDLE,RREADY,RREADY_PEND,WREADY
TRANSITIONS=IDLE->RREADY,
IDLE->WREADY,
RREADY->IDLE,
RREADY->WREADY,
RREADY_PEND->IDLE,
RREADY_PEND->RREADY,
WREADY->IDLE,
WREADY->RREADY,
WREADY->RREADY_PEND
MODULE=DW_axi_x2p_s_control
CURRENT=state
NEXT=next_state
STATES=IDLE,NREN,NWEN,NWSEL,PREPURGE,PURGE,RBUFWT,REN,RSEL,WDTWT,WEN,WRESP,WSEL,WTSTART
TRANSITIONS=IDLE->NREN,
IDLE->NWEN,
IDLE->NWSEL,
IDLE->PURGE,
IDLE->WDTWT,
IDLE->WRESP,
IDLE->WSEL,
IDLE->WTSTART,
NREN->IDLE,
NREN->NWSEL,
NREN->PREPURGE,
NREN->PURGE,
NREN->RBUFWT,
NREN->RSEL,
NREN->WDTWT,
NREN->WRESP,
NREN->WSEL,
NWEN->IDLE,
NWEN->NWSEL,
NWEN->PURGE,
NWEN->WDTWT,
NWEN->WRESP,
NWEN->WSEL,
NWSEL->IDLE,
NWSEL->NWEN,
NWSEL->PURGE,
NWSEL->WDTWT,
NWSEL->WRESP,
NWSEL->WSEL,
PREPURGE->IDLE,
PREPURGE->NWSEL,
PREPURGE->PURGE,
PREPURGE->WDTWT,
PREPURGE->WRESP,
PREPURGE->WSEL,
PURGE->IDLE,
PURGE->NWSEL,
PURGE->WDTWT,
PURGE->WRESP,
PURGE->WSEL,
RBUFWT->IDLE,
RBUFWT->NWSEL,
RBUFWT->PREPURGE,
RBUFWT->PURGE,
RBUFWT->RSEL,
RBUFWT->WDTWT,
RBUFWT->WRESP,
RBUFWT->WSEL,
REN->IDLE,
REN->NWSEL,
REN->PREPURGE,
REN->PURGE,
REN->RBUFWT,
REN->RSEL,
REN->WDTWT,
REN->WRESP,
REN->WSEL,
RSEL->IDLE,
RSEL->NWSEL,
RSEL->PURGE,
RSEL->REN,
RSEL->WDTWT,
RSEL->WRESP,
RSEL->WSEL,
WDTWT->IDLE,
WDTWT->NWEN,
WDTWT->NWSEL,
WDTWT->PURGE,
WDTWT->WRESP,
WDTWT->WSEL,
WEN->IDLE,
WEN->NWSEL,
WEN->PURGE,
WEN->WDTWT,
WEN->WRESP,
WEN->WSEL,
WRESP->IDLE,
WRESP->NWSEL,
WRESP->PURGE,
WRESP->WDTWT,
WRESP->WSEL,
WSEL->IDLE,
WSEL->NWSEL,
WSEL->PURGE,
WSEL->WDTWT,
WSEL->WEN,
WSEL->WRESP,
WTSTART->IDLE,
WTSTART->NWEN,
WTSTART->NWSEL,
WTSTART->PURGE,
WTSTART->WDTWT,
WTSTART->WRESP,
WTSTART->WSEL
